name: CI
on:
  push:
    branches: [ next ]
  pull_request:
    branches: [main, development, next]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHP_AUTH_TOKEN }}" >> ~/.npmrc
          echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
          yarn
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GHP_AUTH_TOKEN }}
      - name: Lint Files
        run: yarn test-lint
  jest:
    name: Jest
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHP_AUTH_TOKEN }}" >> ~/.npmrc
          echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
          yarn
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GHP_AUTH_TOKEN }}
      - name: Run Unit Tests
        run: yarn test-jest
      #- uses: paambaati/codeclimate-action@v3.0.0
      #  env:
      #    CC_TEST_REPORTER_ID: 6928d153a461a3dbacd2d88ddbe0d6005c98f588abb27cefe006f299a5ffb471
      #  with:
      #    coverageCommand: yarn coverage
  e2e:
    name: End<->End
    runs-on: ubuntu-latest
    needs: [jest]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHP_AUTH_TOKEN }}" >> ~/.npmrc
          echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
          yarn
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GHP_AUTH_TOKEN }}
      - name: Run Cypress
        run: yarn test-cypress
        env:
          WAIT_ON_TIMEOUT: 600000
  # chromatic-deployment:
  #  name: Storybook
  #  runs-on: ubuntu-latest
  #  needs: [e2e]
  #  env:
  #   NODE_ENV: test
  #  steps:
  #    - uses: actions/checkout@v1
  #      with:
  #        token: ${{ secrets.GITHUB_TOKEN }}
  #    - name: Install dependencies
  #      run: |
  #        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHP_AUTH_TOKEN }}" >> ~/.npmrc
  #        echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
  #        yarn
  #      env:
  #        NPM_AUTH_TOKEN: ${{ secrets.GHP_AUTH_TOKEN }}
  #    - name: Publish to Chromatic
  #      uses: chromaui/action@v1
  #      with:
  #        token: ${{ secrets.GITHUB_TOKEN }}
  #        projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  #sauce:
  #  name: Saucelabs
  #  runs-on: ubuntu-latest
  #  # TODO: Only run on pr or push to main, use manual testing tunnels for development
  #  needs: [e2e]
  #  if: github.ref == 'refs/heads/main'
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        token: ${{ secrets.GITHUB_TOKEN }}
  #    - name: Install dependencies
  #      run: |
  #        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHP_AUTH_TOKEN }}" >> ~/.npmrc
  #        echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
  #        yarn
  #      env:
  #        NPM_AUTH_TOKEN: ${{ secrets.GHP_AUTH_TOKEN }}
  #    # Saucelabs
  #    - name: Run Saucelabs
  #      uses: saucelabs/saucectl-run-action@v1
  #      with:
  #        sauce-username: ${{ secrets.SAUCE_USERNAME }}
  #        sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
